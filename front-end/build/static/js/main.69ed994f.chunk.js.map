{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","dashboard/DashboardReservations.js","dashboard/DashboardTables.js","dashboard/Dashboard.js","layout/NotFound.js","utils/validations.js","reservations/reservationForm.js","reservations/create.js","reservations/seat.js","reservations/edit.js","reservations/routes.js","tables/create.js","reservations/search.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","timeFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","previous","currentDate","split","year","month","day","setMonth","setDate","next","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","fetched","readReservation","reservation_id","listTables","updateReservationStatus","method","body","JSON","stringify","updateReservationInfo","table_id","met","createReservation","createTable","table","ErrorAlert","DashboardReservationsView","loadDashboard","useState","cancelReservationError","setCancelReservationError","handleCanceled","window","confirm","abortController","AbortController","catch","abort","displayReservations","index","scope","first_name","last_name","mobile_number","reservation_time","people","data-reservation-id-status","href","data-reservation-id-cancel","onClick","DashboardTablesView","tables","loadTables","finishTableError","setFinishTableError","handleFinished","finishTable","displayTables","sort","occupied","table_name","capacity","data-table-id-status","data-table-id-finish","Dashboard","setReservations","reservationsError","setReservationsError","dateOfReservations","setDateOfReservations","search","useLocation","searchDate","queryString","parse","setTables","tablesError","setTablesError","slice","useEffect","placeholder","NotFound","validateReservation","errors","messages","current","resDate","valid","validUTC","toUTCString","push","isNaN","getDay","length","ReservationForm","handleSubmit","handleChange","history","useHistory","errorDisplay","join","role","htmlFor","onChange","pattern","required","min","goBack","CreateReservation","currentReservation","setCurrentReservation","reservationError","setReservationError","setErrors","event","preventDefault","Number","replace","target","SeatReservation","useParams","selectedTableID","setSelectedTableID","currentReservationError","setCurrentReservationError","tableOptions","foundTable","find","updateTableStatus","pathname","EditReservation","timeString","ReservationRoutes","exact","path","CreateTable","newTable","setNewTable","for","SearchReservation","foundReservations","setFoundReservations","foundReservationError","setFoundReservationError","notFound","setNotFound","document","getElementById","Routes","Layout","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69ed994f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar nav-custom align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"create-custom sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"text-custom nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"text-custom nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"text-custom nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"text-custom nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\n import formatReservationDate from \"./format-reservation-date\";\n import formatReservationTime from \"./format-reservation-date\";\n \n const API_BASE_URL =\n   process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n \n /**\n  * Defines the default headers for these functions to work with `json-server`\n  */\n const headers = new Headers();\n headers.append(\"Content-Type\", \"application/json\");\n \n /**\n  * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n  *\n  * This function is NOT exported because it is not needed outside of this file.\n  *\n  * @param url\n  *  the url for the requst.\n  * @param options\n  *  any options for fetch\n  * @param onCancel\n  *  value to return if fetch call is aborted. Default value is undefined.\n  * @returns {Promise<Error|any>}\n  *  a promise that resolves to the `json` data or an error.\n  *  If the response is not in the 200 - 399 range the promise is rejected.\n  */\n async function fetchJson(url, options, onCancel) {\n   try {\n     const response = await fetch(url, options);\n \n     if (response.status === 204) {\n       return null;\n     }\n \n     const payload = await response.json();\n \n     if (payload.error) {\n       return Promise.reject({ message: payload.error });\n     }\n     return payload.data;\n   } catch (error) {\n     if (error.name !== \"AbortError\") {\n       console.error(error.stack);\n       throw error;\n     }\n     return Promise.resolve(onCancel);\n   };\n };\n \n /**\n  * Retrieves all existing reservation.\n  * @returns {Promise<[reservation]>}\n  *  a promise that resolves to a possibly empty array of reservation saved in the database.\n  */\n \n export async function listReservations(params, signal) {\n   const url = new URL(`${API_BASE_URL}/reservations`);\n   Object.entries(params).forEach(([key, value]) =>\n     url.searchParams.append(key, value.toString())\n   );\n \n   const fetched = await fetchJson(url, { headers, signal }, [])\n     .then(formatReservationDate)\n     .then(formatReservationTime);\n   return fetched;\n };\n \n export async function readReservation(reservation_id, signal){\n   const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n   return await fetchJson(url, {headers, signal}, [])\n     .then(formatReservationDate)\n     .then(formatReservationTime);\n };\n \n export async function listTables(signal) {\n   const url = new URL(`${API_BASE_URL}/tables`);\n   return await fetchJson(url, { headers, signal }, [])\n };\n \n export async function updateReservationStatus(reservation_id, status, signal) {\n   const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\n   const options = {\n     method:'PUT',\n     headers,\n     body: JSON.stringify(status),\n     signal,\n   };\n   return await fetchJson(url, options, {});\n };\n \n export async function updateReservationInfo(reservation_id, body, signal){\n   const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n   const options = {\n     method: 'PUT',\n     headers,\n     body: JSON.stringify(body),\n     signal,\n   };\n   return await fetchJson(url, options, {});\n };\n \n export async function finishTable(table_id, signal) {\n   const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\n   const options = {\n     method: \"DELETE\",\n     headers,\n     signal,\n   };\n   return await fetchJson(url, options);\n };\n \n export async function updateTableStatus(table_id, body, met, signal) {\n   const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`)\n   const options = {\n     method: met,\n     headers,\n     body: JSON.stringify(body),\n     signal,\n   };\n   return await fetchJson(url, options,[]);\n };\n \n export async function createReservation(reservation, signal) {\n   const url = new URL(`${API_BASE_URL}/reservations`);\n   const options = {\n     method:'POST',\n     headers,\n     body: JSON.stringify(reservation),\n     signal,\n   };\n   return await fetchJson(url, options, {});\n };\n \n export async function createTable(table, signal) {\n   const url = new URL(`${API_BASE_URL}/tables`);\n   const options = {\n     method:'POST',\n     headers,\n     body: JSON.stringify(table),\n     signal,\n   };\n   return await fetchJson(url, options, {});\n };\n\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, {useState} from \"react\";\nimport { updateReservationStatus } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\n\nexport default function DashboardReservationsView({reservations, loadDashboard}){\n  const [cancelReservationError, setCancelReservationError] = useState(null);\n\n  const handleCanceled = async (reservation_id) => {\n    if (\n      window.confirm(\n        \"Do you want to cancel this reservation? This cannot be undone.\"\n      )\n    ) {\n      const abortController = new AbortController();\n      setCancelReservationError(null);\n      await updateReservationStatus(reservation_id, {data: { status: \"cancelled\" } }, abortController.signal)\n        .then(loadDashboard)\n        .catch(setCancelReservationError);\n      return () => abortController.abort();\n    }\n  };\n\n   const displayReservations = reservations.map((reservation, index) => {\n        \n        return (\n            <tr key={index}>\n                <th scope=\"row\">{reservation.reservation_id}</th>\n                <td>{reservation.first_name}</td>\n                <td>{reservation.last_name}</td>\n                <td>{reservation.mobile_number}</td>\n                <td>{reservation.reservation_date}</td>\n                <td>{reservation.reservation_time}</td>\n                <td>{reservation.people}</td>\n                <td><p data-reservation-id-status={reservation.reservation_id}>{reservation.status}</p></td>\n                <td>{reservation.status !== \"booked\"? null : (\n                <>\n                  <a\n                    href={`/reservations/${reservation.reservation_id}/seat`}\n                    className=\"btn btn-outline-primary mx-1\"\n                  >\n                    Seat\n                  </a>\n                  </>)}{reservation.status !== \"booked\" ? null : (\n                <>\n                  <a\n                    href={`/reservations/${reservation.reservation_id}/edit`}\n                    className=\"btn btn-outline-primary mx-1\"\n                  >\n                    Edit\n                  </a>\n                  </>)}{reservation.status !== \"booked\" ? null :(\n                <>\n                  <button data-reservation-id-cancel={reservation.reservation_id} onClick={() => handleCanceled(reservation.reservation_id)} className=\"btn btn-outline-danger ml-1\"\n                  >\n                    Cancel\n                  </button>\n                  </>)}</td>\n                  \n            </tr>)\n})\n\n\n        return (<>\n        <ErrorAlert error={cancelReservationError} />\n            <table className=\"text-custom table caption-top\">\n  <caption>Reservations</caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">ID #</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Mobile Number</th>\n      <th scope=\"col\">Date</th>\n      <th scope=\"col\">Time</th>\n      <th scope=\"col\">People</th>\n      <th scope=\"col\">Status</th>\n      <th scope=\"col\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    {displayReservations}\n  </tbody>\n</table>\n       </> )\n    }","import React, { useState } from \"react\";\nimport { finishTable} from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\n\nexport default function DashboardTablesView({tables, loadDashboard, loadTables}){\n    const [finishTableError, setFinishTableError] = useState(null);\n  \n    function handleFinished(table_id){\n        if (\n          window.confirm(\n            \"Is this table ready to seat new guests? This cannot be undone.\"\n          )\n        ) {\n          const abortController = new AbortController();\n          setFinishTableError(null);\n          finishTable(table_id, abortController.signal)\n            .then(loadDashboard)\n            .then(loadTables)\n            .catch(setFinishTableError);\n          return () => abortController.abort();\n        };\n      };\n\n\n    const displayTables = tables.sort().map((table, index) =>  {    \n        return( <>\n            {table.occupied || table.reservation_id?\n                <tr key={index}>\n                    <th scope=\"row\">{table.table_id}</th>\n                    <td>{table.table_name}</td>\n                    <td>{table.capacity}</td>\n                    <td>{table.reservation_id}</td>\n                    <td><p data-table-id-status={table.table_id}>Occupied</p></td>\n                    <td><button data-table-id-finish={table.table_id} className=\"btn btn-outline-primary\" onClick={() => handleFinished(table.table_id)}>Finish</button></td>\n                </tr> : \n                  <tr key={index}>\n                  <th scope=\"row\">{table.table_id}</th>\n                  <td>{table.table_name}</td>\n                  <td>{table.capacity}</td>\n                  <td>{table.reservation_id}</td>\n                  <td><p className=\"col\" data-table-id-status={table.table_id}>Free</p></td>\n                </tr>}\n                </>\n                )})\n\n            \n    return (\n        <>\n         \n            <ErrorAlert error={finishTableError} />\n                <div>\n                <table className=\"text-custom table align-middle\">\n                <caption>Tables</caption>\n                <thead>\n                    <tr>\n                    <th scope=\"col\">ID #</th>\n                    <th scope=\"col\">Table Name</th>\n                    <th scope=\"col\">Table Capacity</th>\n                    <th scope=\"col\">Reservation ID#</th>\n                    <th scope=\"col\">Occupied?</th>\n                    <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {displayTables}\n                </tbody>\n                </table>\n            </div>\n        </>);\n};","import React, { useEffect, useState } from \"react\";\nimport { listReservations, listTables} from \"../utils/api\";\nimport {previous, today, next} from \"../utils/date-time\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport DashboardReservationsView from \"./DashboardReservations\";\nimport DashboardTablesView from \"./DashboardTables\";\nimport { Link, useLocation} from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"../layout/Layout.css\";\n\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\nfunction Dashboard({ date }) {\n  const [reservations, setReservations] = useState([]);\n  const [reservationsError, setReservationsError] = useState(null);\n\n  const [dateOfReservations, setDateOfReservations] = useState(date);\n\n  const {search} = useLocation();\n  const searchDate = queryString.parse(search).date;\n  const [tables, setTables] = useState([]);\n  const [tablesError, setTablesError] = useState(null);\n\n  useEffect(loadTables,[]);\n  useEffect(loadDashboard, [search, dateOfReservations, date, searchDate]);\n  useEffect(resetDate, [search, date]);\n  \n  function loadTables() {\n      const abortController = new AbortController();\n      setTablesError(null);\n      listTables(abortController.signal)\n        .then(setTables)\n        .catch(setTablesError)\n          \n      return () => abortController.abort();\n  };\n\n  function loadDashboard() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n\n    if (searchDate) {\n    setDateOfReservations(searchDate.slice(0,10));\n    listReservations({date: searchDate}, abortController.signal).then(setReservations).catch(setReservationsError)\n      } else {\n    setDateOfReservations(date)\n    listReservations({date}, abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError)\n      };\n      return () => abortController.abort();\n  };\n\n  function resetDate() {\n    if(search) return\n    const abortController = new AbortController();\n    setDateOfReservations(date)\n    return () => abortController.abort();\n  };\n\n\n\n  return (<>\n      <div className=\"container p-3 my-2 text-white\">\n        <div className=\"nav-custom row justify-content-center\">\n          <div className=\"col-5.5 p-3 mb-2 text-white\">\n            <h1 className=\"nav-custom m-3 pl-3\">Reservations Dashboard</h1>\n          </div>\n        </div>\n\n        <div className=\"nav-custom row justify-content-center\">\n          <div className=\"col-1.5\">\n          <button id=\"today\" type=\"today\" className=\"btn btn-outline-primary btn m-2\"><Link to={`/dashboard?date=${previous(dateOfReservations)}`}>Previous</Link></button>\n          </div>\n          <div className=\"col-1.5\">\n          <button  id=\"today\" type=\"today\" className=\"btn btn-outline-primary btn m-2\"><Link to={`/dashboard?date=${today()}`}>Today</Link></button>\n          </div>\n          <div className=\"col-1.5\">\n          <button id=\"next\" type=\"next\" className=\"btn btn-outline-primary btn m-2\"><Link to={`/dashboard?date=${next(dateOfReservations)}`}>Next</Link></button>\n          </div>\n        </div>\n        <div className=\"nav-custom row justify-content-center\">\n          <div className=\"col-2.5\">\n            <h4 className=\"m-3\">{dateOfReservations}</h4>\n          </div>\n          </div>\n        <div className=\"nav-custom row justify-content-center\">\n          <div className=\"col-3\">\n            <input type=\"date\" className=\"form-control\" name=\"reservation_date\" id=\"reservation_date\" placeholder=\"Date of Reservation\"/>\n          </div>\n        </div>\n      </div>\n      <ErrorAlert error={tablesError} />\n      <ErrorAlert error={reservationsError} />\n      <div className=\"container p-3 my-2\">    \n      <DashboardReservationsView reservations={reservations} loadDashboard={loadDashboard}/>\n     <DashboardTablesView tables={tables} loadDashboard={loadDashboard} loadTables={loadTables}/>\n    </div>\n  </>);\n};\n\nexport default Dashboard;\n\n","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","export function validateReservation(reservation, errors){\n    errors.messages = [];\n    const {\n        first_name,\n        last_name,\n        mobile_number,\n        reservation_time,\n        reservation_date,\n        people,\n    } = reservation;  \n\n    const current = new Date();\n    const resDate = `${reservation_date} ${reservation_time}`\n    const valid = new Date(resDate.toString());\n    const validUTC = new Date(valid.toUTCString());\n\n    if(!first_name) errors.messages.push(\"Missing first name\");\n    if(!last_name) errors.messages.push(\"Missing last name\");\n    if(!mobile_number) errors.messages.push(\"Missing mobile number\");\n    if(!reservation_time) errors.messages.push(\"Missing time\");\n    if(!reservation_date)errors.messages.push(\"Missing date\");\n    if(!people) errors.messages.push(\"Missing paty size\");\n\n    if(isNaN(Date.parse(reservation_date))){\n        errors.messages.push('Date is not valid'); \n    };\n    if(validUTC < current){\n        errors.messages.push('Date must be in the future'); \n    };\n    if(valid.getDay() === 2){\n        errors.messages.push('closed on tuesdays');\n    };\n    if(reservation_time < \"10:30\"){\n        errors.messages.push('Pick a later time, we open at 10:30 AM');\n      }\n    if(reservation_time > \"21:30\"){\n        errors.messages.push('Pick an earlier time, we close at 9:30 PM');\n      };\n    if(errors.messages.length > 0){\n        return false;\n    };\n\n    return true;\n};\n\nexport function validateSeating(table, people, errors){\n\n    if(table.occupied === true){\n        errors.messages.push('Table is occupied');\n    };\n\n    if(table.capacity < people){\n        errors.messages.push('Table capacity not large enough');\n    };\n\n    if(errors.messages.length > 0){\n        return false;\n    };\n\n    return true;\n};\n\n\n\n","import { useHistory } from \"react-router\";\n\nexport default function ReservationForm({reservation, errors, handleSubmit, handleChange}){\n    \n    const history = useHistory();\n    const errorDisplay = `Resolve these issues: ${errors.messages.join(',\\n ')} !`;\n\n    return (<>\n<form>\n            {errors.messages.length ? <div className=\"alert alert-danger\" role=\"alert\">\n                {errorDisplay}</div> : <div></div>}\n            <div className=\"mb-3\">\n                <label htmlFor=\"first_name\" className=\"form-label\">First Name:</label>\n                <input type=\"text\" className=\"form-control\" name=\"first_name\" id=\"first_name\" placeholder=\"First Name\" value={reservation?.first_name} onChange={handleChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"last_name\" className=\"form-label\">Last Name:</label>\n                <input type=\"text\" className=\"form-control\" name=\"last_name\" id=\"last_name\" placeholder=\"Last Name\" value={reservation?.last_name} onChange={handleChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"mobile_number\" className=\"form-label\">Mobile Number:</label>\n                <input type=\"tel\" className=\"form-control\" name=\"mobile_number\" id=\"mobile_number\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" placeholder=\"xxx-xxx-xxxx\" value={reservation?.mobile_number} onChange={handleChange} required />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"reservation_date\" className=\"form-label\">Date of reservation:</label>\n                <input type=\"date\" className=\"form-control\" name=\"reservation_date\" id=\"reservation_date\" placeholder=\"Date of Reservation\" value={reservation?.reservation_date} onChange={handleChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"reservation_time\" className=\"form-label\">Time of reservation:</label>\n                <input type=\"time\" className=\"form-control\" name=\"reservation_time\" id=\"reservation_time\" placeholder=\"Time of Reservation\" value={reservation?.reservation_time} onChange={handleChange} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"people\" className=\"form-label\">Number of people:</label>\n                <input type=\"number\" min=\"1\" pattern=\"\\d+\" className=\"form-control\" name=\"people\" id=\"people\" placeholder='10' value={reservation?.people} onChange={handleChange} />\n            </div>\n            <button onClick={() => history.goBack()} type=\"cancel\" className=\"buttonSpace btn btn-secondary\">Cancel</button>\n            <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary m-2\">Submit</button>\n        </form>\n        </>)\n};","import React, { useState} from \"react\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport {useHistory} from \"react-router-dom\";\nimport {createReservation} from \"../utils/api\";\nimport { validateReservation } from \"../utils/validations\";\nimport ReservationForm from \"./reservationForm\";\n\nexport default function CreateReservation(){\n    const [currentReservation, setCurrentReservation] = useState({});\n    const [reservationError, setReservationError] = useState(null)\n    const [errors, setErrors] = useState({\"messages\":[]});\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setErrors({\"messages\": [] });\n        const { name, value } = event.target;\n        setCurrentReservation({...currentReservation, [name]: value});\n    };\n\n    const handleSubmit = async (event) => {\n        const abortController = new AbortController();\n        event.preventDefault();\n        const validated = validateReservation(currentReservation, errors);\n\n        if(!validated){\n            setErrors({...errors})\n            return errors.messages;\n        };\n        const reservation = {\n            ...currentReservation,\n            people: Number(currentReservation.people),\n        };\n\n        await createReservation({data: reservation}, abortController.signal)\n            .then(() => history.replace(`/dashboard?date=${reservation.reservation_date}`))\n            .catch(setReservationError)\n\n        return () => abortController.abort();\n    };\n\n    return ( <>\n         <div className=\"nav-custom container p-3 my-2 text-white\">\n            <div className=\"nav-custom row m-5 justify-content-center\">\n                <div className=\"col-4.5 p-3\">\n                    <h1 className=\"m-3\">Create a Reservation</h1>\n                </div>\n            </div>   \n        </div>\n        <div className=\"container p-3 my-2\">   \n            <ErrorAlert error={reservationError}/> \n            <ReservationForm reservation={currentReservation} errors={errors} handleSubmit={handleSubmit} handleChange={handleChange}/>\n        </div>\n        </>);\n};","import { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { listTables, updateTableStatus, readReservation } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { today } from \"../utils/date-time\";\n\n\nexport default function SeatReservation(){\n    const history = useHistory();\n    const {reservation_id} = useParams();\n    const [selectedTableID, setSelectedTableID] = useState(null);\n    const [tables, setTables] = useState([]);\n    const [tablesError, setTablesError] = useState(\"\");\n    \n    const [currentReservation, setCurrentReservation] = useState({});\n    const [currentReservationError, setCurrentReservationError] = useState(null);\n \n    useEffect(loadTables, []);\n    useEffect(loadReservation, [reservation_id]);\n\n    function loadTables(){\n            const abortController = new AbortController();\n            setTablesError(null);\n            listTables(abortController.signal)\n                .then((tables) => {\n                setTables(tables);\n                setSelectedTableID(tables[0].table_id);\n              })\n                .catch(setTablesError)\n            return () => abortController.abort();\n    };\n\n    function loadReservation(){\n        const abortController = new AbortController();\n        setCurrentReservationError(null);\n        readReservation(reservation_id, abortController.signal)\n            .then(setCurrentReservation)\n            .catch(setCurrentReservationError)\n        return () => abortController.abort();\n    };\n\n    function handleChange({ target }) {\n            setSelectedTableID(target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const abortController = new AbortController();\n        setTablesError(null);\n        let foundTable = tables.find((table) => table.table_id === Number(selectedTableID));\n\n        if(currentReservation.people > foundTable.capacity) {//TO PASS TEST CODE, ORIGINALLY WAS A WINDOW ALERT \n            setTablesError({message: \"Party size is greater then table capacity, choose another table.\"})\n            return\n        };\n        updateTableStatus(selectedTableID, { data: { reservation_id } }, 'PUT', abortController.signal)\n            .then(() => {history.push({\n                pathname: \"/dashboard\",\n                search:`?date=${currentReservation.reservation_date}`})\n             })\n            .catch(setTablesError)\n        return () => abortController.abort();\n    };\n\n    const tableOptions = tables.map((table) => (\n        <option key={Number(table.table_id)} value={Number(table.table_id)}>\n          {table.table_name} - {table.capacity}\n        </option>));\n\n    return (\n    <> \n        <div className=\"container p-3 my-2 nav-custom text-white\">\n            <div className=\"row m-5 justify-content-center\">\n            <div className=\"col-4.5  p-3 nav-custom text-white\">\n                <h1 className=\"m-3\">Seat Reservation</h1>\n            </div>\n            </div>\n        </div>\n\n        <div className=\"container p-3 my-2 border border-primary bg-white text-white\">\n            <div className=\"row my-3 justify-content-center\">\n            <div className=\"col-5 align-self-center border border-primary p-3 nav-custom-2 text-white\">\n                <div className=\"row justify-content-center\"><h4>{currentReservation.first_name} {currentReservation.last_name}</h4></div>\n                <div className=\"row justify-content-center\"><h4>Party of {currentReservation.people}</h4></div>\n            </div>\n        </div>\n\n        <div className=\"row my-3 justify-content-center\">\n            <div className=\"col-5 align-self-center border border-primary p-3 nav-custom-2 text-white\">\n                <div className=\"row justify-content-center\"><h4>Phone #: </h4></div>\n                <div className=\"row justify-content-center\"><h4>{currentReservation.mobile_number}</h4></div>\n            </div>\n        </div>\n        \n        \n        </div>\n        <div className=\"container p-3 my-2 nav-custom text-white\">\n            <div className=\"row mb-2 justify-content-center\">\n                <div className=\"col-2.5 p-3 nav-custom text-white\">\n                <h2>Select Table </h2>\n                </div>\n            </div>\n        \n            <div className=\"row justify-content-center\">\n            \n                <div className=\"col-4.5 m-2 p-3 border border-primary nav-custom-2 text-white\">\n                    <form>\n                    <label className=\"\">Table#</label>\n                    <select name=\"table_id\" onChange={handleChange} value={selectedTableID} className=\"form-select form-select-lg mb-2\" >\n                        {tableOptions}\n                    </select>\n                    </form>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-1 p-2 bg-dark text-white\">    \n                    <button type=\"submit\" onClick={handleSubmit}  className=\"btn btn-outline-primary\">Confirm</button>\n                </div>\n                <div className=\"col-1 p-2 bg-dark text-white\">\n                    <button type=\"cancel\" onClick={()=> history.push(`/dashboard?date=${today()}`)}  className=\"btn btn-outline-danger mb-1\">Cancel</button>\n                </div>\n            </div>\n        </div>\n        <ErrorAlert error={tablesError} />\n        <ErrorAlert error={currentReservationError} />\n    </>);\n};","import React, { useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {updateReservationInfo, readReservation} from \"../utils/api\";\nimport { validateReservation } from \"../utils/validations\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { formatAsTime } from \"../utils/date-time\";\nimport ReservationForm from \"./reservationForm\";\n\n\nexport default function EditReservation(){\n    const [errors, setErrors] = useState({\"messages\":[]});\n    const history = useHistory();\n    const {reservation_id} = useParams();\n\n    \n    const [currentReservation, setCurrentReservation] = useState({});\n    const [currentReservationError, setCurrentReservationError] = useState(null);\n\n    useEffect(loadReservation, [reservation_id]);\n\n    function loadReservation(){\n        const abortController = new AbortController();\n        setCurrentReservationError(null);\n        readReservation(reservation_id, abortController.signal)\n            .then(setCurrentReservation)\n            .catch(setCurrentReservationError)\n        return () => abortController.abort();\n        };\n\n\n    const handleChange = (event) => {\n        setErrors({\"messages\": [] });\n        const { name, value } = event.target;\n        setCurrentReservation({...currentReservation, [name]: value});\n    };\n\n    const handleSubmit = async (event) => {\n        const abortController = new AbortController();\n        event.preventDefault();\n        const validated = validateReservation(currentReservation, errors);\n\n        if(!validated){\n            setErrors({...errors})\n            return errors.messages;\n        };\n\n        const reservation = {\n                    ...currentReservation,\n                    reservation_time: formatAsTime(currentReservation.reservation_time),\n                    people: Number(currentReservation.people),\n        };\n\n        await updateReservationInfo(currentReservation.reservation_id, {data: reservation}, abortController.signal)\n        .then(() => {history.push({\n                pathname: \"/dashboard\",\n                search:`?date=${currentReservation.reservation_date}`\n        })})\n        return () => {\n            abortController.abort();\n        };\n    };\n    \n    return (<>\n        <div className=\"nav-custom container p-3 my-2 text-white\">\n            <div className=\"row m-5 justify-content-center\">\n                <div className=\"col-4.5  p-3 nav-custom text-white\">\n                    <h1 className=\"m-3\">Edit a Reservation</h1>\n                </div>\n            </div>\n        </div>\n        <div className=\"container p-3 my-2\">  \n        <ErrorAlert error={currentReservationError}/> \n        <ReservationForm reservation={currentReservation} errors={errors} handleSubmit={handleSubmit} handleChange={handleChange}/>\n        </div>\n   </> );\n};","import React, { Fragment } from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"../layout/NotFound\";\nimport CreateReservation from \"./create\";\nimport SeatReservation from \"./seat\";\nimport EditReservation from \"./edit\";\n\nexport default function ReservationRoutes() {\n    return (\n    <Fragment>   \n      <Switch>\n        <Route exact={true} path={`/reservations/new`}>\n            <CreateReservation />\n        </Route>\n        <Route exact={true} path={`/reservations/:reservation_id/seat`}>\n            <SeatReservation />\n        </Route>\n        <Route exact={true} path={`/reservations/:reservation_id/edit`}>\n            <EditReservation />\n        </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n    </Fragment> \n  );\n};","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\"\n\n\n// Function to handle creating a new table\nexport default function CreateTable(){\n    const history = useHistory();\n    const [newTable, setNewTable] = useState({});\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setNewTable({...newTable, [name]: value});\n\n    }\n    \n    const [errors, setErrors] = useState(null);\n\n    const handleSubmit = async (event) => {\n        const abortController = new AbortController();\n\n        event.preventDefault();\n\n        const table = {\n                ...newTable,\n                capacity: Number(newTable.capacity),\n            };\n\n        await createTable({data: table}, abortController.signal)\n            .then(() => {history.replace(`/dashboard`)})\n            .catch(setErrors)\n\n        return () => {\n            abortController.abort();\n        };\n    };\n\n  return (<>\n    <div className=\"container p-3 my-2 nav-custom text-white\">\n          <div className=\"row m-5 justify-content-center\">\n          <div className=\"col-4.5  p-3 nav-custom text-white\">\n              <h1 className=\"m-3\">Create a Table</h1>\n          </div>\n         </div>\n      </div>\n      <div className=\"container p-3 my-2\">    \n      <ErrorAlert error={errors} />\n      <form>\n          <div className=\"mb-3\">\n              <label for=\"table_name\" className=\"form-label\">Table Name:</label>\n              <input type=\"text\" className=\"form-control\" name=\"table_name\" id=\"table_name\" placeholder=\"Table Name\" value={newTable?.table_name} onChange={handleChange}/>\n          </div>\n          <div className=\"mb-3\">\n              <label for=\"capacity\" className=\"form-label\">Capacity of Table:</label>\n              <input type=\"number\" min=\"1\" pattern=\"\\d+\" className=\"form-control\" name=\"capacity\" id=\"capacity\" placeholder='10' value={newTable?.capacity} onChange={handleChange}/>\n          </div>\n          <button onClick={() => history.goBack()} type=\"button\" className=\"buttonSpace btn btn-secondary\">Cancel</button>\n          <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n      </form>\n      </div>\n  </>\n  )\n}\n","import React, {useState}  from \"react\";\nimport { listReservations } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport DashboardReservationsView from \"../dashboard/DashboardReservations\";\n\nexport default function SearchReservation(){\n    const [foundReservations, setFoundReservations] = useState([]);\n    const [foundReservationError, setFoundReservationError] = useState(null);\n\n    const [notFound, setNotFound] = useState(false);\n\n    function handleChange({ target }) {\n        setNotFound(false)\n      };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setFoundReservations([]);\n        const mobile_number = document.getElementById('mobile_number').value\n        const abortController = new AbortController();\n        \n        listReservations({mobile_number}, abortController.signal)\n            .then((response) => {\n                if(response.length){\n                    setFoundReservations(response)\n                } else setNotFound(true)\n            })\n            .catch(setFoundReservationError)\n\n        return () => abortController.abort();\n    };\n\n    const NotFound = (<b>No reservations found</b>);\n    \n    return (\n        <>\n        <div className=\"container p-3 my-2 nav-custom text-white\">\n            <div className=\"row m-5 justify-content-center\">\n            <div className=\"col-4.5  p-3 nav-custom text-white\">\n                <h1 className=\"m-3\">Search for a Reservation</h1>\n            </div>\n           \n        </div>\n            \n        </div>\n        <ErrorAlert error={foundReservationError} />\n        <div className=\"container border border-primary bg-white text-white\">\n            <div className=\"row justify-content-center p-2\">\n                <div className=\"col-6\">\n                    <input type=\"text\" className=\"form-control form-control\" id='mobile_number' name=\"mobile_number\" onChange={handleChange} placeholder=\"Enter a customer's phone number\"/> \n                </div>\n                <div className=\"col-2\">\n                    <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-outline-primary\">Submit</button>\n                </div>\n            </div>\n        </div>\n        <div>\n            <h6>\n                {foundReservations.length? <DashboardReservationsView reservations={foundReservations}/>: null}\n            </h6>\n            {notFound? NotFound : null}\n        </div>\n        </>);\n};","import React from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport { today } from \"../utils/date-time\";\nimport ReservationRoutes from \"../reservations/routes\"\nimport CreateTable from \"../tables/create\";\nimport SearchReservation from \"../reservations/search\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route path = \"/search\">\n      <SearchReservation />\n      </Route>\n      <Route path = \"/reservations\">\n      <ReservationRoutes />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard date={today()} />\n      </Route>\n      <Route exact={true} path={`/tables/new`}>\n            <CreateTable />\n        </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\n function Layout() {\n  return (\n    <div className=\"res-dash container-fluid\">\n      <div className=\"row min-vh-100 flex-column flex-md-row\">\n        <div className=\"nav-custom col-12 col-md-2 p-0 flex-shrink-1 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col bg-white \">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}